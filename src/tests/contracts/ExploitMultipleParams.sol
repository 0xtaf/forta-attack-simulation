// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.0;

import "./ExploitedProtocol.sol";

contract ExploitMultipleParams {
    address _target;
    address _spender;

    constructor(address target, address spender) public {
        _target = target;
        _spender = spender;
    }

    function trap() external {
        revert('It is a trap 1');
    }

    function trap2(bytes calldata randomBytes) external {
        assert(false);
    }

    function trap3(
        address address1,
        address address2,
        uint256 num,
        bytes calldata some
    ) external {
        require(false, 'It is a trap 3');
    }

    function attack(address address1, uint256 num, bytes calldata randomBytes, uint256[] calldata arr, address address2) public {
        ExploitedProtocol(_target).useExploit(_spender);
    }
}